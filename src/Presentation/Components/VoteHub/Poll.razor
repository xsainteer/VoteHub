@using Application.Services
@using EntityPoll = Domain.Entities.Poll;
@using EntityPollOption = Domain.Entities.PollOption;
@using Blazorise
@using Domain.Entities
@using Infrastructure.Database.Entities
@using Microsoft.AspNetCore.Identity
@using Presentation.Components.Account
@using Presentation.Extensions
@inject UserManager<VoteHubUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IPollOptionService PollOptionService
@inject IVoteService VoteService
@inject IdentityUserAccessor UserAccessor

<h3>Poll</h3>

<Card>
    <CardHeader>
        <CardTitle>@EntityPoll.Name</CardTitle>
        
        <CardSubtitle>@EntityPoll.Description</CardSubtitle>
        
        <Alert bind-Visible="AlertProperties.IsVisible" Color="AlertProperties.Color">
            <AlertMessage>@AlertProperties.Message</AlertMessage>
        </Alert>
    </CardHeader>

    <Fields>
        @foreach (var option in EntityPoll.Options)
        {
            <PollOption Option="@option" OnClick="HandlePollOptionClick"/>
        }
    </Fields>
</Card>

@code {
    [Parameter]
    public EntityPoll EntityPoll { get; set; } = new();
    
    [Parameter]
    public VoteHubUser? CurrentUser { get; set; }

    AlertProps AlertProperties { get; set; } = new();
    
    
    private async Task HandlePollOptionClick(EntityPollOption option)
    {
        var newVote = new Vote
        {
            PollOptionId = option.Id,
            UserId = CurrentUser?.Id ?? throw new InvalidOperationException("User not found"),
            PollId = EntityPoll.Id,
            VotedAt = DateTime.Now
        };
    }
}